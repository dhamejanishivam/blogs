[{"content":" Hey there! I am Shivam I started this blog to share the things I’m learning ; in tech, in life, and in everything I stumble into along the way.\nI don’t promise polished answers, just real experiences, lessons, and maybe a few mistakes worth avoiding.\nFeedback If you’d like me to change/add something, or just want to share your thoughts on my work, feel free to reach out.\nOr if you just want to say hi:\nEmail Instagram (not very active here) Learn more and contribute on GitHub.\nThanks for reading!\nMore About me\n","permalink":"https://dhamejanishivam.github.io/blogs/about/","summary":"\u003cp class=\"message\"\u003e\n  Hey there! I am Shivam \n\u003c/p\u003e\n\u003cp\u003eI started this blog to share the things I’m learning ; in tech, in life, and in everything I stumble into along the way.\u003cbr\u003e\n\u003cbr\u003e\nI don’t promise polished answers, just real experiences, lessons, and maybe a few mistakes worth avoiding.\u003cbr\u003e\n\u003cbr\u003e\u003c/p\u003e\n\u003ch2 id=\"feedback\"\u003eFeedback\u003c/h2\u003e\n\u003cp\u003eIf you’d like me to change/add something, or just want to share your thoughts on my work, feel free to reach out.\u003cbr\u003e\nOr if you just want to say hi:\u003c/p\u003e","title":"About"},{"content":"GitHub is a platform that allows software developers to store, share, and manage their code. It also enables collaboration with other developers. Some features of GitHub: You can upload your code and store it securely. You can host static websites directly from your repositories. You can share your code with other developers. Other developers can contribute to your repositories (if you allow it), and you can do the same for theirs. (These are just some of the features. GitHub is constantly adding more.)\nSteps to upload your project to GitHub First, open your project directory in the terminal, VS Code, or any other code editor. cd your_project_directory git init git remote add origin https://github.com/your_username/your_repo_name.git git add . git commit -m \u0026#34;Your commit message here\u0026#34; git branch -M main git push -u origin main Steps to host your static website using GitHub Pages Make sure your project is uploaded to GitHub. Open your repository in a web browser. Ensure it contains an index.html file and is a static website (no backend servers like Node.js, Flask, or Django). Go to the Settings tab of your repository. Navigate to Pages (Settings → Pages). Under the Branch section, select main from the drop-down menu. Your site will be live in a few minutes at: https://your_username.github.io/your_repo_name\n1. Check which repo your directory is linked to git remote -v Shows the remote URLs linked to your project (usually origin).\n2. Change the remote repo (if you want to link to another one) git remote set-url origin https://github.com/your_username/new_repo.git Use this if you want to push your local project to a different repo without reinitializing Git.\n3. Check your current branch git branch Shows all branches. The one with * is your active branch.\n4. Create a new branch git checkout -b new_branch_name Creates and switches to a new branch in one command.\n5. Switch to another branch git checkout branch_name Use this to move between branches.\n6. See commit history (with nice one-liner view) git log --oneline --graph --decorate --all Shows commit history in a clean, visual way.\n7. Undo last commit (but keep changes) git reset --soft HEAD~1 Use this if you messed up the commit message or forgot to add a file.\n8. Undo last commit (and delete changes completely) git reset --hard HEAD~1 Warning: This will wipe your last commit + changes permanently.\n9. Stash your changes (save work temporarily without committing) git stash Hides your current work. You can bring it back later.\nTo reapply:\ngit stash pop 10. Pull the latest code from GitHub git pull origin main Fetches the latest updates from the remote repo and merges them into your branch.\n11. Clone a repo git clone https://github.com/username/repo.git Makes a full local copy of an existing repo.\n12. View file changes before committing git status git diff Shows what has been modified and what’s staged for commit.\n13. Remove a file from Git (but keep it locally) git rm --cached filename Useful when you accidentally added node_modules or .env by mistake.\n14. Ignore files in Git Create a .gitignore file in your project and add patterns:\nnode_modules/ *.log .env 15. Rename a branch git branch -m old_branch_name new_branch_name 16. Delete a branch git branch -d branch_name # delete local branch git push origin --delete branch_name # delete remote branch 17. Fix “main” vs “master” confusion If your repo uses master but you want to rename it:\ngit branch -M main git push -u origin main 18. Force push (overwrite remote) git push origin main --force Dangerous. This overwrites remote history — only use when absolutely necessary.\n19. See who made what changes (blame feature) git blame filename Shows line-by-line who last modified each part of a file.\n20. Create a new repo directly from command line gh repo create Requires GitHub CLI (gh) installed. Lets you create repos without opening GitHub in a browser.\n","permalink":"https://dhamejanishivam.github.io/blogs/posts/second_blog/","summary":"\u003ch4 id=\"github-is-a-platform-that-allows-software-developers-to-store-share-and-manage-their-code-it-also-enables-collaboration-with-other-developers\"\u003eGitHub is a platform that allows software developers to store, share, and manage their code. It also enables collaboration with other developers.\u003c/h4\u003e\n\u003cp\u003e \n \u003c/p\u003e\n\u003ch3 id=\"some-features-of-github\"\u003eSome features of GitHub:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eYou can upload your code and store it securely.\u003c/li\u003e\n\u003cli\u003eYou can host static websites directly from your repositories.\u003c/li\u003e\n\u003cli\u003eYou can share your code with other developers.\u003c/li\u003e\n\u003cli\u003eOther developers can contribute to your repositories (if you allow it), and you can do the same for theirs.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cem\u003e(These are just some of the features. GitHub is constantly adding more.)\u003c/em\u003e\u003c/p\u003e","title":"GitHub"},{"content":"Prompt engineering is about wording your requests so the model actually does what you want. Here’s the simplest breakdown of the main types with examples.\nTypes of prompting Zero-shot prompting You just ask directly, with no example. The system figures it out from training. Works for simple tasks.\n# zero-shot prompt prompt = \u0026#34;Summarize the following text in one sentence: Apple releases a new iPhone with better battery life and camera.\u0026#34; One-shot prompting You give exactly one example along with the instruction. That single example guides the model.\n# one-shot prompt prompt = \u0026#34;\u0026#34;\u0026#34;Translate the sentence to French. Example: English: I like coffee French: J\u0026#39;aime le café English: I enjoy reading books French:\u0026#34;\u0026#34;\u0026#34; Few-shot / multi-shot prompting You feed multiple examples. More examples = more consistency in results.\n# few-shot prompt prompt = \u0026#34;\u0026#34;\u0026#34;Classify the sentiment as Positive, Negative, or Neutral. Example: Text: \u0026#34;The food was amazing and the staff were friendly.\u0026#34; Sentiment: Positive Text: \u0026#34;The service was slow and disappointing.\u0026#34; Sentiment: Negative Text: \u0026#34;It was okay, nothing special.\u0026#34; Sentiment:\u0026#34;\u0026#34;\u0026#34; Instruction prompting You simply state what you want in clear, direct terms. Think of it as zero-shot with sharper wording.\n# instruction prompt prompt = \u0026#34;List three pros and three cons of electric cars.\u0026#34; Refrences [1] . Lilian Weng : Article on Prompt Engineering\n","permalink":"https://dhamejanishivam.github.io/blogs/posts/prompt_engineering/","summary":"\u003cp\u003ePrompt engineering is about wording your requests so the model actually does what you want. Here’s the simplest breakdown of the main types with examples.\u003c/p\u003e\n\u003ch2 id=\"types-of-prompting\"\u003eTypes of prompting\u003c/h2\u003e\n\u003ch3 id=\"zero-shot-prompting\"\u003eZero-shot prompting\u003c/h3\u003e\n\u003cp\u003eYou just ask directly, with no example. The system figures it out from training. Works for simple tasks.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# zero-shot prompt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprompt \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Summarize the following text in one sentence: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eApple releases a new iPhone \u003cspan style=\"color:#66d9ef\"\u003ewith\u003c/span\u003e better battery life \u003cspan style=\"color:#f92672\"\u003eand\u003c/span\u003e camera\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"one-shot-prompting\"\u003eOne-shot prompting\u003c/h3\u003e\n\u003cp\u003eYou give exactly one example along with the instruction. That single example guides the model.\u003c/p\u003e","title":"Prompt Engineering"}]